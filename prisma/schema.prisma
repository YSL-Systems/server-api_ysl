generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User  {
  id Int @id @default(autoincrement())
  name String
  phone String @unique
  password String
  categories Category[] @relation("Categories")
  role Role @default(USER)
  topic String
  city String
  photo String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("users")
}

model Token {
  id Int @id @default(autoincrement())
  user_id Int @unique
  token String @unique

  @@map("tokens")
}

model Category {
  id Int @id @default(autoincrement())
  user User @relation("Categories",fields: [user_id], references: [id])
  user_id Int
  category String
  name String
  image String
  gradient Boolean
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("categories")
}

model CategoryType {
  id Int @id @default(autoincrement())
  category String @unique
  name String
  image String
  gradient Boolean
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("category_type")
}
model System {
  id Int @id @default(autoincrement())
  scenarios Scenario[] @relation("Scenario")
  sensors Sensor[] @relation("Sensor")
  outputs Output[] @relation("Output")
  user_id Int
  favorite Boolean @default(false)
  system String
  category String
  category_name String
  name String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("systems")
}

model Scenario {
  id Int @id @default(autoincrement())
  system System @relation("Scenario", fields: [system_id], references: [id])
  system_id Int
  scenario Int
  name String
  activated Boolean @default(false)
  running Boolean @default(false)
  configuration Json
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("scenarios")
}

model Sensor {
  id Int @id @default(autoincrement())
  system System @relation("Sensor", fields: [system_id], references: [id])
  system_id Int
  controller_id Int
  type Int
  address String
  name String
  active Boolean @default(false)
  status String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("sensors")
}

model Output {
  id Int @id @default(autoincrement())
  system System @relation("Output", fields: [system_id], references: [id])
  system_id Int
  title String
  value Int
  active Boolean @default(true)
  static Boolean @default(false)
  mode Int @default(0)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("outputs")
}

model SensorType {
  id Int @id @default(autoincrement())
  type Int @unique
  name String
  activated Boolean @default(true)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("sensor_type")
}

enum Role {
  SUPERVISOR
  ADMIN
  USER
}